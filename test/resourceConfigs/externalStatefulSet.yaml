apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: external-postgres
  name: external-postgres
  namespace: default
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: external-postgres
  serviceName: external-postgres
  template:
    metadata:
      labels:
        app: external-postgres
    spec:
      containers:
      - name: external-postgres
        args:
          - -c
          - config_file=/etc/postgres.conf
          - -c
          - hba_file=/etc/pg_hba.conf
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        - name: POSTGRES_USER
          value: external
        - name: POSTGRES_PASSWORD
          value: external
        - name: POSTGRES_DB
          value: external
        - name: POSTGRES_REPLICATION_PASSWORD
          value: postgresReplicaPsw
        image: postgres:14.5
        imagePullPolicy: IfNotPresent
        ports:
          - containerPort: 5432
            protocol: TCP
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - exec pg_isready -U external -h $POD_IP
          failureThreshold: 10
          initialDelaySeconds: 60
          periodSeconds: 20
          successThreshold: 1
          timeoutSeconds: 15
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - exec pg_isready -U external -h $POD_IP
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 3
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: external-postgres-db
        - mountPath: /etc/postgres.conf
          name: config
          subPath: postgres.conf
        - mountPath: /etc/pg_hba.conf
          name: config
          subPath: pg_hba.conf
        - name: config
          mountPath: /docker-entrypoint-initdb.d/primary_create_replication_role.sh
          subPath: primary_create_replication_role.sh
      volumes:
      - configMap:
          defaultMode: 511
          name: external-postgres-config
        name: config
  volumeClaimTemplates:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: external-postgres-db
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 50Gi
      storageClassName: standard
      volumeMode: Filesystem
