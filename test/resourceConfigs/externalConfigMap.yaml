apiVersion: v1
kind: ConfigMap
metadata:
  name: external-postgres-config
  namespace: default
  labels:
    environment: acceptancetesting

data:

  postgres.conf: |
    # Replication configs
    listen_addresses = '*'
    max_wal_senders = 10
    max_connections = 100
    shared_buffers = 128MB

    # Logging
    #log_destination = 'stderr,csvlog'
    #logging_collector = on
    #log_directory = 'pg_log'
    #log_filename= 'postgresql-%Y-%m-%d_%H%M%S.log'


  primary_init_script.sh: |
    #!/bin/bash
    set -e

    dt=$(date '+%d/%m/%Y %H:%M:%S');
    echo "$dt - Running init script the 1st time Primary Kubegres container is created...";

    customDatabaseName="mydb"
    customUserName="mydbuser"

    echo "$dt - Running: psql -v ON_ERROR_STOP=1 --username $POSTGRES_USER --dbname $POSTGRES_DB ...";

    psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" --dbname "$POSTGRES_DB" <<-EOSQL
    CREATE DATABASE $customDatabaseName;
    CREATE USER $customUserName WITH PASSWORD '$POSTGRES_MYAPP_PASSWORD';
    \connect $customDatabaseName;
    CREATE TABLE account(user_id serial PRIMARY KEY, username VARCHAR (50) NOT NULL);
    INSERT INTO account VALUES (1, 'username1');
    INSERT INTO account VALUES (2, 'username2');
    GRANT ALL PRIVILEGES ON DATABASE "$customDatabaseName" to $customUserName;
    GRANT ALL ON "account" to $customUserName;
    EOSQL

    echo "$dt - Init script is completed";


  pg_hba.conf: |
    # TYPE  DATABASE        USER            ADDRESS                 METHOD
    # Replication connections by a user with the replication privilege
    host    replication     replication     all                     md5
    # As long as it is authenticated, all connections allowed except from "0.0.0.0/0"
    local   all             all                                     md5
    host    all             all             all                     md5
    host    all             all             0.0.0.0/0               reject

  primary_create_replication_role.sh: |
    #!/bin/bash
    set -e
    
    dt=$(date '+%d/%m/%Y %H:%M:%S');
    echo "$dt - Creating replication role...";
    echo "$dt - Running: psql -v ON_ERROR_STOP=1 --username $POSTGRES_USER --dbname $POSTGRES_DB ... CREATE ROLE replication WITH REPLICATION PASSWORD ... GRANT EXECUTE ON FUNCTION pg_promote TO replication;";
    
    psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" --dbname "$POSTGRES_DB" <<-EOSQL
    CREATE ROLE replication WITH REPLICATION PASSWORD '$POSTGRES_REPLICATION_PASSWORD' LOGIN;
    GRANT EXECUTE ON FUNCTION pg_promote TO replication;
    EOSQL
    
    echo "$dt - Replication role created";
